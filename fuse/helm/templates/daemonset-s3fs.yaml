apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: s3-fs-{{ .Values.bucketName }}
  name: s3-fs-{{ .Values.bucketName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels: 
      app: s3-fs-{{ .Values.bucketName }}
  template:
    metadata:
      labels:
        app: s3-fs-{{ .Values.bucketName }}
    spec:
      containers:
      - name: {{ .Values.bucketName }} 
        image: {{ .Values.image.repository }}:{{ .Values.image.tag}}
        imagePullPolicy: Always
        command: ["./s3fs", "-f", "{{ .Values.bucketName }}", "/s3/fs/{{ .Values.bucketName }}",
                  "-o", "_netdev,umask=0222,uid=1000,gid=1000,connect_timeout=20,readwrite_timeout=20,retries=2,use_cache=/tmp/s3fs,ensure_diskfree=10000,max_stat_cache_size=20000,stat_cache_expire=900,list_object_max_keys=1000,endpoint={{ .Values.region }},iam_role=auto,ro,allow_other,noatime,noexec,nodev,nosuid"]
        lifecycle:
          preStop:
            exec:
              command: ["umount", "-f", "/s3/fs/{{ .Values.bucketName}}"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: mntdatas3
          mountPath: "/s3/fs/{{ .Values.bucketName}}:shared"
        env:
          - name: S3_BUCKET
            value: {{ .Values.bucketName }}
          - name: MOUNT_PATH
            value: "/s3/fs/{{ .Values.bucketName}}"
      volumes:
      - name: mntdatas3
        hostPath:
          path: "/s3/fs/{{ .Values.bucketName}}"
      nodeSelector:
        hub.jupyter.org/node-purpose: user


# For debug, add 'curldbg,dbglevel=info' to mount options and '-d -d' to s3fs early switches, e.g. after '-f'.



