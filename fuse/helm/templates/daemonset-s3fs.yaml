apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: s3-s3fs-{{ .Values.bucketName }}
  name: s3-s3fs-{{ .Values.bucketName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels: 
      app: s3-s3fs-{{ .Values.bucketName }}
  template:
    metadata:
      labels:
        app: s3-s3fs-{{ .Values.bucketName }}
    spec:
      containers:
      - name: {{ .Values.bucketName }} 
        image: {{ .Values.image.repository }}:{{ .Values.image.tag}}
        imagePullPolicy: Always
        command: ["./s3fs", "-f", "-o", "iam_role=auto", "-o", "uid=1000,gid=100,ro,allow_other,noatime,noexec",
 		  "{{ .Values.bucketName }}", "/s3/fs/{{ .Values.bucketName}}"]
        lifecycle:
          preStop:
            exec:
              command: ["umount", "-f", "/s3/fs/{{ .Values.bucketName}}"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: mntdatas3
          mountPath: "/s3/fs/{{ .Values.bucketName}}:shared"
        env:
          - name: S3_BUCKET
            value: {{ .Values.bucketName }}
          - name: MOUNT_PATH
            value: "/s3/fs/{{ .Values.bucketName}}"
      volumes:
      - name: mntdatas3
        hostPath:
          path: "/s3/fs/{{ .Values.bucketName}}"
