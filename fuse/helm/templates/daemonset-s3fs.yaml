apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: s3-fs-{{ .Values.bucketName }}
  name: s3-fs-{{ .Values.bucketName }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels: 
      app: s3-fs-{{ .Values.bucketName }}
  template:
    metadata:
      labels:
        app: s3-fs-{{ .Values.bucketName }}
    spec:
      containers:
      - name: {{ .Values.bucketName }} 
        image: {{ .Values.image.repository }}:{{ .Values.image.tag}}
        imagePullPolicy: Always
        command: ["./s3fs", "-f", "-d", "-d", "{{ .Values.bucketName }}", "/s3/fs/{{ .Values.bucketName }}",
                  "-o", "curldbg,dbglevel=info,use_cache=/tmp,iam_role=auto,connect_timeout=60,readwrite_timeout=60,ro,allow_other,noatime,noexec,nodev,nosuid"]
        lifecycle:
          preStop:
            exec:
              command: ["umount", "-f", "/s3/fs/{{ .Values.bucketName}}"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: mntdatas3
          mountPath: "/s3/fs/{{ .Values.bucketName}}:shared"
        env:
          - name: S3_BUCKET
            value: {{ .Values.bucketName }}
          - name: MOUNT_PATH
            value: "/s3/fs/{{ .Values.bucketName}}"
      volumes:
      - name: mntdatas3
        hostPath:
          path: "/s3/fs/{{ .Values.bucketName}}"
      nodeSelector:
        hub.jupyter.org/node-purpose: user
