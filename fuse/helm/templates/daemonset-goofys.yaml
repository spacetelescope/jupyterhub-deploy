{{- $nameSpace := .Release.Namespace }}
{{- $imageRepository := .Values.image.repository }}
{{- $imageTag := .Values.image.tag }}
{{- range $bucketName := .Values.bucketNames }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: s3-gf-{{ $bucketName }}
  name: s3-gf-{{ $bucketName }}
  namespace: {{ $nameSpace }}
spec:
  selector:
    matchLabels: 
      app: s3-gf-{{ $bucketName }}
  template:
    metadata:
      labels:
        app: s3-gf-{{ $bucketName }}
    spec:
      containers:
      - name: s3-gf-{{ $bucketName }} 
        image: {{ $imageRepository }}:{{ $imageTag }}
        imagePullPolicy: Always
        command: ["./goofys", "-f", "--uid", "1000", "--gid", "1000", "--dir-mode", "0555", "--file-mode", "0444",
                  "-o", "ro,allow_other,noatime,noexec,nosuid,nodev",
                  "{{ $bucketName }}", "/s3/gf/{{ $bucketName}}"]
        lifecycle:
          preStop:
            exec:
              command: ["umount", "-f", "/s3/gf/{{ $bucketName}}"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: mntdatas3
          mountPath: "/s3/gf/{{ $bucketName}}:shared"
        env:
          - name: S3_BUCKET
            value: {{ $bucketName }}
          - name: MOUNT_PATH
            value: "/s3/gf/{{ $bucketName}}"
      volumes:
      - name: mntdatas3
        hostPath:
          path: "/s3/gf/{{ $bucketName}}"
      nodeSelector:
        hub.jupyter.org/node-purpose: user
{{- end }}
