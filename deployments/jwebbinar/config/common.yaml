# Use this  CRDS config,  maybe with a different S3 bucket, for scalable performance on AWS.
# Optionally set CRDS_S3_RETURN_URL="1" to do direct-to-cal-memory CRDS transfers.
# CRDS_PATH: "/home/jovyan/crds_cache"
# CRDS_SERVER_URL: "https://jwst-serverless.stsci.edu"
# CRDS_S3_ENABLED: "1"
# CRDS_S3_RETURN_URI: "0"
# CRDS_MAPPING_URI: "s3://dmd-test-crds/mappings/jwst"
# CRDS_REFERENCE_URI: "s3://dmd-test-crds/references/jwst"
# CRDS_CONFIG_URI: "s3://dmd-test-crds/config/jwst"
# CRDS_USE_PICKLES: "0"
# CRDS_DOWNLOAD_MODE: plugin
# CRDS_DOWNLOAD_PLUGIN: "crds_s3_get ${SOURCE_URL} ${OUTPUT_PATH} ${FILE_SIZE} ${FILE_SHA1SUM}"

jupyterhub:
  hub:
    extraConfig:
      templates: |
        ## Configure JupyterHub to look for the templates we inject with a ConfigMap
        c.JupyterHub.template_paths.insert(0, "/etc/jupyterhub/templates")
      postStart: |
        c.KubeSpawner.lifecycle_hooks = {
            "postStart": {
                "exec": {
                    "command": ["/bin/sh", "-c", "rsync -r /etc/default-home-contents/ /home/jovyan; /opt/environments/setup-notebooks; chmod +x /home/jovyan/Desktop/*.desktop; /opt/common-scripts/symlink-crds; /opt/environments/remove-kernel jdaviz; rm -rf /home/jovyan/.user-dirs/Desktop"]
                }
            }
        }
    extraVolumes:
      ## Make the hub pod be able to access a ConfigMap volume
      - name: hub-templates
        configMap:
          name: hub-templates
    extraVolumeMounts:
      ## Make the hub pod hub container mount that ConfigMap volume
      - mountPath: /etc/jupyterhub/templates
        name: hub-templates
  prePuller:
    continuous:
      enabled: true
  singleuser:
    image:
      tag: latest-dev
      pullPolicy: Always
    profileList:
      - display_name: "JWebbinar Science Platform"
        default: true
    storage:
      dynamic:
        storageClass: "aws-efs"
      extraVolumes:
        - name:  preloaded-fits-volume
          persistentVolumeClaim:
            claimName: preloaded-fits-pvc
        - name:  preloaded-crds-volume
          persistentVolumeClaim:
            claimName: preloaded-crds-pvc
            #- name: mirage-data-volume
            #persistentVolumeClaim:
            #claimName: mirage-data-pvc
      extraVolumeMounts:
        - name:  preloaded-fits-volume
          mountPath: /home/shared/preloaded-fits
          readOnly: true
        - name:  preloaded-crds-volume
          mountPath: /home/shared/preloaded-crds
          readOnly: true
          #        - name: mirage-data-volume
          #mountPath: /home/shared/mirage-data
          #readOnly: true
    extraEnv:
      CRDS_PATH:  /home/jovyan/crds_cache
      CRDS_SERVER_URL: https://jwst-crds.stsci.edu
      #CRDS_CONTEXT: jwst_0717.pmap
      # for jwst=1.3.3
      #CRDS_CONTEXT: jwst_0764.pmap
    defaultUrl: "/lab"
    memory:
      guarantee: 14G
      limit: 15G
  cull:
    enabled: true
    timeout: 1800
    every: 60
