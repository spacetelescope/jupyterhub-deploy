
# ========================= vvvvv Custom  vvvvv =========================

ARG BASE_IMAGE
FROM $BASE_IMAGE AS build

# ----------------------------------------------------------------------
# Duplicated in config,  these are for standalone non-hub lab use.

ENV CRDS_PATH=/home/jovyan/crds_cache
ENV CRDS_SERVER_URL=https://roman-crds-test.stsci.edu
# ENV CRDS_VERBOSITY=20

# ----------------------------------------------------------------------
USER root

# ------------------------------------------------------------------------------
# Install environments

# All specs for frozen builds need to be available before their normal installs
USER ${NB_UID}

# ----------------------------------------------------------------------
# Add jupyter-lab-extensions to base environment as well as standard packages.
# Performing common update here enables mission specific frozen spec.

COPY --chown=${NB_UID}:${NB_GID} env-frozen/base/  /opt/env-frozen/base/
RUN   /opt/common-scripts/install-common  base

# ----------------------------------------------------------------------
# Roman CAL
#
# Copy romcan-cal conda environment requirements: floating, frozen, chilly
# All copies below are factored to enable Docker idempotence / build caching
# e.g. changing tests should not result in re-installing conda

#COPY --chown=${NB_UID}:${NB_GID} environments/roman-cal/*.yml  /opt/environments/roman-cal/
COPY --chown=${NB_UID}:${NB_GID} environments/roman-cal/*.explicit  /opt/environments/roman-cal/

# roman-cal currently needs to pin pip<21.3 due to issue with git clone --filter=blob:none
# and pip-compile when installing git+https://github.com style requirements.  This potentially
# should be a generic hint.
COPY --chown=${NB_UID}:${NB_GID} environments/roman-cal/*.conda  /opt/environments/roman-cal/

COPY --chown=${NB_UID}:${NB_GID} env-frozen/roman-cal/  /opt/env-frozen/roman-cal/

COPY --chown=${NB_UID}:${NB_GID} env-chilly/roman-cal/  /opt/env-chilly/roman-cal/

# ----- Install romcan-cal conda environment
RUN /opt/common-scripts/env-conda roman-cal

# ----- Copy romcan-cal pip requirements
# ----- This will include both romancal release requirements and anything JH adds.
COPY --chown=${NB_UID}:${NB_GID} environments/roman-cal/*.pip  /opt/environments/roman-cal/

# ----  Compile romcan-cal pip requirements to dependency solution
RUN /opt/common-scripts/env-compile roman-cal

# ----- Install compiled roman-cal pip dependency solution
RUN /opt/common-scripts/env-sync roman-cal

# ----- Copy remaining roman environments files, including tests and post-start-hook scripts
# NOTE: this is a Docker cache buster and why builds back up to env installation when you're
# iterating on the post-start-hook or tests.  The problem is that the broad copy makes it look
# like potentially all roman-cal-specific requirements have changed.
COPY --chown=${NB_UID}:${NB_GID} environments/roman-cal/ /opt/environments/roman-cal/

# ----- COPY --chown=${NB_UID}:${NB_GID} nersc-refresh-announcements/ nersc-refresh-announcements/
# ----- RUN cd nersc-refresh-announcements && \
# -----     pip install . && \
# -----     cd .. && \
# -----     rm -rf nersc-refresh-announcements

# ========================= ^^^^^ Custom  ^^^^^ =========================
