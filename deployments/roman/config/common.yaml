# Use this  CRDS config,  maybe with a different S3 bucket, for scalable performance on AWS.
# Optionally set CRDS_S3_RETURN_URL="1" to do direct-to-cal-memory CRDS transfers.
# CRDS_PATH: "/home/jovyan/crds_cache"
# CRDS_SERVER_URL: "https://jwst-serverless.stsci.edu"
# CRDS_S3_ENABLED: "1"
# CRDS_S3_RETURN_URI: "0"
# CRDS_MAPPING_URI: "s3://dmd-test-crds/mappings/jwst"
# CRDS_REFERENCE_URI: "s3://dmd-test-crds/references/jwst"
# CRDS_CONFIG_URI: "s3://dmd-test-crds/config/jwst"
# CRDS_USE_PICKLES: "0"
# CRDS_DOWNLOAD_MODE: plugin
# CRDS_DOWNLOAD_PLUGIN: "crds_s3_get ${SOURCE_URL} ${OUTPUT_PATH} ${FILE_SIZE} ${FILE_SHA1SUM}"

jupyterhub:
  singleuser:
    image:
      pullPolicy: Always
    memory:
      guarantee: 14G
      limit: 15G
    lifecycleHooks:
      postStart:
        exec:
          command: ["/opt/environments/post-start-hook"]
    extraEnv:
        CRDS_PATH:  /home/jovyan/crds_cache
        CRDS_SERVER_URL: https://roman-crds-test.stsci.edu
        TEST_BIGDATA: https://bytesalad.stsci.edu/artifactory
