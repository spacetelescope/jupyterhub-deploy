# ========================= vvvvv Custom  vvvvv =========================

ARG BASE_IMAGE
FROM $BASE_IMAGE AS build

ARG USE_FROZEN=1
ENV USE_FROZEN=$USE_FROZEN

# ---------------------------------------------------------------
# VARTOOLS Light Curve Analysis Program
USER root
RUN curl --silent --show-error https://www.astro.princeton.edu/~jhartman/vartools/vartools-1.38.tar.gz -o vartools-1.38.tar.gz && \
   tar zxf vartools-1.38.tar.gz &&\
   cd vartools-1.38 &&\
   mkdir -p /usr/local &&\
   ./configure --prefix=/use/local &&\
   make &&\
   make install &&\
   cd .. &&\
   rm -rf vartools-1.38 vartools-1.38.tar.gz

# ----------------------------------------------------------------------
# Install environments

USER ${NB_UID}

# This enables installation of ALL frozen environments and needs to be at the top
COPY --chown=${NB_UID}:${NB_GID}  environments/frozen/  /opt/environments/frozen

# --------------------------- JULIET -------------------------------------

COPY --chown=${NB_UID}:${NB_GID} environments/juliet/juliet.yml /opt/environments/juliet/juliet.yml
RUN /opt/common-scripts/env-create  juliet /opt/environments/juliet/juliet.yml

RUN /opt/common-scripts/install-common juliet

COPY --chown=${NB_UID}:${NB_GID} environments/juliet/basic.pip  /opt/environments/juliet/basic.pip
RUN /opt/common-scripts/env-update  juliet /opt/environments/juliet/basic.pip

COPY --chown=${NB_UID}:${NB_GID} environments/juliet/juliet.pip  /opt/environments/juliet/juliet.pip
RUN /opt/common-scripts/env-update  juliet /opt/environments/juliet/juliet.pip

# --------------------------- TESS -------------------------------------
# ---- RUN /opt/common-scripts/env-clone  base  tess &&\
# ----     /opt/common-scripts/env-update tess /opt/environments/tess/tess.yml  &&\

COPY --chown=${NB_UID}:${NB_GID} environments/tess/tess.yml /opt/environments/tess/tess.yml
RUN /opt/common-scripts/env-create  tess /opt/environments/tess/tess.yml

RUN /opt/common-scripts/install-common tess

COPY --chown=${NB_UID}:${NB_GID} environments/tess/basic.pip  /opt/environments/tess/basic.pip
RUN /opt/common-scripts/env-update  tess /opt/environments/tess/basic.pip

COPY --chown=${NB_UID}:${NB_GID} environments/tess/tess.pip  /opt/environments/tess/tess.pip
RUN /opt/common-scripts/env-update  tess /opt/environments/tess/tess.pip

# RUN  /opt/common-scripts/env-src-install   https://files.pythonhosted.org/packages/95/5c/2a97a352d0c4ba59a0decf06964f5660a13ac57004014a62fe4a9e2a891a/juliet-2.1.2.tar.gz

# RUN  /opt/common-scripts/env-src-install  https://files.pythonhosted.org/packages/f3/33/3eda063897edb8bd267347da08a9874ddf77eea8244e91daa37411f8bc56/batman-package-2.4.8.tar.gz

# COPY --chown=${NB_UID}:${NB_GID} environments/tess/ml.pip  /opt/environments/tess/ml.pip
# RUN /opt/common-scripts/env-update  tess /opt/environments/tess/ml.pip

# --------------------------- EXOPLANET -------------------------------------

COPY --chown=${NB_UID}:${NB_GID} environments/exoplanet/exoplanet.yml /opt/environments/exoplanet/exoplanet.yml
RUN /opt/common-scripts/env-create  exoplanet /opt/environments/exoplanet/exoplanet.yml

RUN /opt/common-scripts/install-common exoplanet

COPY --chown=${NB_UID}:${NB_GID} environments/exoplanet/basic.pip  /opt/environments/exoplanet/basic.pip
RUN /opt/common-scripts/env-update  exoplanet /opt/environments/exoplanet/basic.pip

COPY --chown=${NB_UID}:${NB_GID} environments/exoplanet/exoplanet.pip  /opt/environments/exoplanet/exoplanet.pip
RUN /opt/common-scripts/env-update  exoplanet /opt/environments/exoplanet/exoplanet.pip

COPY --chown=${NB_UID}:${NB_GID} environments/exoplanet/ml.pip  /opt/environments/exoplanet/ml.pip
RUN /opt/common-scripts/env-update  exoplanet /opt/environments/exoplanet/ml.pip

# ----------------------------------------------------------------------
# Do this only if incremental builds succeed since it busts the cache
# if anything changed.
COPY --chown=${NB_UID}:${NB_GID} environments/ /opt/environments

# ----------------------------------------------------------------------
# Run the hook script for updates which are common to both the standalone
# image and to hub cloud operation.
#
COPY environments/post-start-hook  /opt/environments/post-start-hook
RUN /opt/environments/post-start-hook

# Tensorflow
# ENV TF_XLA_FLAGS='--tf_xla_enable_xla_devices'.
# ENV CUDA_VISIBLE_DEVICES = "-1"

# ========================= ^^^^^ Custom  ^^^^^ =========================
